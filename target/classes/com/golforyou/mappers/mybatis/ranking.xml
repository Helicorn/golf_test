<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rank">
	<!-- 랭킹 수 -->
	<select id="rank_count" resultType="java.lang.Integer">
		select count(*) from memberVO m inner join ranking r on m.mno=r.r_no where mstate=0 and m.mrole='ROLE_USER'
	</select>
	
	<!-- 로그인한 회원의 점수 -->
	<select id="rank_loginpoint" resultType="int">
		select r_sum from memberVO m inner join ranking r on m.mno=r.r_no where m.username = #{rid}
	</select>

	<!-- 총합 점수 업데이트 -->
	<update id="rank_editAvg">
		<!-- update ranking set r_sum=r_sum+#{s_sumscore},r_maxrange=#{s_range} where r_id=#{s_id} -->
		update ranking set r_sum=r_sum+#{s_sumscore},r_maxrange=#{s_range} where r_no=(select r_no from memberVO m inner join ranking r on m.mno = r.r_no where username=#{s_id})
	</update>
	
	<!-- 회원가입과 동시에 랭킹레코드 발생 -->
	<insert id="rank_insert">
		insert into ranking(r_no) values((select max(mno) from memberVO))
	</insert>
	
	<!-- r_sum의 초기값 9999를 0으로 리셋 -->
	<update id="rank_reset">
		update ranking set r_sum=0 where r_no=(select r_no from memberVO m inner join ranking r on m.mno = r.r_no where username=#{s_id})
	</update>
	
	<!-- 랭크리스트 얻어오기(rankingVO기준) -->
	<select id="rank_list" resultType="rank">
		select * from memberVO m inner join ranking r on m.mno = r.r_no where mstate=0 and m.mrole='ROLE_USER' order by r_sum asc
	</select>
	
	<!-- 랭크리스트 얻어오기(MemberVO기준) -->
	<select id="rank_list2" resultType="member">
		select * from memberVO m inner join ranking r on m.mno = r.r_no where mstate=0 and m.mrole='ROLE_USER' order by r_sum asc
	</select>
	
	<!-- 아이디에 맞는 닉네임 하나 반환 -->
	<select id="rank_onenickname" resultType="String">
		select nickname from memberVO where username=#{sc_id}
	</select>
	
	<!-- 점수 반환 -->
	<select id="rank_point" resultType="int">
		select r_sum from memberVO m inner join ranking r on m.mno=r.r_no where m.mno=#{mno}
	</select>
	
	<!-- 해당 아이디의 프로필사진 반환 -->
	<select id="rank_profile" resultType="String">
		select mfile from memberVO m inner join ranking r on m.mno = r.r_no where m.username=#{rid}
	</select>
	
	<!-- 랭크리스트 얻어오기(rankingVO기준),prov포함 -->
	<select id="rank_listprov" resultType="rank">
		select * from memberVO m inner join ranking r on m.mno = r.r_no where mstate=0 and m.mrole='ROLE_USER' and m.maddr=#{prov} order by r_sum asc
	</select>
	
	<!-- 랭크리스트 얻어오기(MemberVO기준),prov포함 -->
	<select id="rank_listprov2" resultType="member">
		select * from memberVO m inner join ranking r on m.mno = r.r_no where mstate=0 and m.mrole='ROLE_USER' and m.maddr=#{prov} order by r_sum asc
	</select>
	
	<!-- 랭킹 수, 그런데 prov를 곁들인 -->
	<select id="rank_countprov" resultType="java.lang.Integer">
		select count(*) from memberVO m inner join ranking r on m.mno=r.r_no where mstate=0 and m.mrole='ROLE_USER' and m.maddr=#{prov}
	</select>
</mapper>